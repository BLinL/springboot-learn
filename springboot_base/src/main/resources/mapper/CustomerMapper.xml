<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liu.springboot.mapper.CustomerMapper">
    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

    <!--集合的嵌套结果映射 ofType表示嵌套的集合的泛型类 javaType可以省略-->
    <resultMap id="customerOrder" type="Customer">
        <id property="id" column="id" javaType="Integer"/>
        <result property="name" column="name" javaType="String"/>
        <result property="gender" column="gender" javaType="String"/>
        <collection property="orders" ofType="Order" resultMap="orderResult" columnPrefix="order_"/>
    </resultMap>

    <resultMap id="orderResult" type="Order">
        <id property="id" column="id" javaType="Integer"/>
        <result property="orderNO" column="orderno"/>
        <result property="productName" column="productName" javaType="String"/>
        <result property="custId" column="cust_id" javaType="Integer"/>
        <result property="date" column="date"/>
    </resultMap>

    <!--给重复的列名起一个别名 orderResult的column相当于默认加了前缀-->
    <select id="selectCustomerOrder" resultMap="customerOrder">
        select
        c.id,
        c.name,
        c.gender,
        o.id as order_id,
        o.orderno as order_orderno,
        o.productName as order_productName,
        o.cust_id as order_cust_id,
        o.date as order_date
        from t_customer c
        left outer join t_order o
        on c.id = o.cust_id
        where c.id = #{id,javaType=Integer}
    </select>
</mapper>